set(MODULE_NAME "modulec")
set(MODULE_NAMESPACE "mylib::")
set(MODULE_ALIAS "${MODULE_NAMESPACE}${MODULE_NAME}")

if(NOT DEFINED MODULE_EXPORT)
	set(MODULE_EXPORT "${MODULE_NAME}export")
endif()

set(PROJECT_SOURCES
	${CMAKE_CURRENT_LIST_DIR}/src/modulec.cpp
)

set(PROJECT_HEADERS
)
	
set(PROJECT_PUBLIC_HEADERS
	${CMAKE_CURRENT_LIST_DIR}/include/modulec.h
)

add_library(${MODULE_NAME} STATIC ${PROJECT_SOURCES} ${PROJECT_HEADERS} ${PROJECT_PUBLIC_HEADERS})
add_library(${MODULE_ALIAS} ALIAS ${MODULE_NAME})

set_target_properties(${MODULE_NAME} PROPERTIES
	PUBLIC_HEADER ${PROJECT_PUBLIC_HEADERS}
	)

target_link_libraries(${MODULE_NAME}
	PRIVATE
		modulea
)

target_include_directories(${MODULE_NAME}
	PUBLIC		
		$<BUILD_INTERFACE:${CMAKE_CURRENT_LIST_DIR}/include>
        $<INSTALL_INTERFACE:include>
	PRIVATE
		$<BUILD_INTERFACE:${CMAKE_CURRENT_LIST_DIR}/src>
)

##################
# INSTALL / EXPORT
if(EXPORT_MODULE)
	include(CMakePackageConfigHelpers)
	include(GNUInstallDirs)

	install(
		TARGETS ${MODULE_NAME}
		EXPORT ${MODULE_EXPORT}
		LIBRARY DESTINATION ${CMAKE_INSTALL_LIBDIR}
		ARCHIVE DESTINATION ${CMAKE_INSTALL_LIBDIR}
		RUNTIME DESTINATION ${CMAKE_INSTALL_BINDIR}
		PUBLIC_HEADER DESTINATION ${CMAKE_INSTALL_INCLUDEDIR}
		INCLUDES DESTINATION ${CMAKE_INSTALL_INCLUDEDIR}
		)

	export(
		EXPORT ${MODULE_EXPORT}
		NAMESPACE ${MODULE_NAMESPACE}
		FILE ${MODULE_NAME}Targets.cmake
	)

	install(
		EXPORT ${MODULE_EXPORT}
		NAMESPACE ${MODULE_NAMESPACE}
		FILE ${MODULE_NAME}Targets.cmake
		DESTINATION ${CMAKE_INSTALL_LIBDIR}/cmake/${MODULE_NAME}
	)

	install(
		FILES
			${CMAKE_CURRENT_LIST_DIR}/cmake/${MODULE_NAME}Config.cmake
		DESTINATION ${CMAKE_INSTALL_LIBDIR}/cmake/${MODULE_NAME}
	)
else()
	install(FILES ${PROJECT_PUBLIC_HEADERS} DESTINATION include)
	if(BUILD_STATIC_LIB)
		install(FILES ${PROJECT_HEADERS} DESTINATION include)
	endif()
endif()
