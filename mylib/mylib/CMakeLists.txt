set(MODULE_NAME "mylib")
set(MODULE_NAMESPACE "mylib::")
set(MODULE_ALIAS "${MODULE_NAMESPACE}${MODULE_NAME}")
set(MODULE_EXPORT "myliblibexport")

file(GLOB PROJECT_SOURCES
	"${CMAKE_CURRENT_LIST_DIR}/src/*.cpp"
	)

file(GLOB PROJECT_HEADERS
	"${CMAKE_CURRENT_LIST_DIR}/src/*.h"
	)
	
file(GLOB PUBLIC_HEADERS
	"${CMAKE_CURRENT_LIST_DIR}/include/*.h"
)

if(BUILD_STATIC)
	add_library(${MODULE_NAME} STATIC ${PROJECT_SOURCES} ${PROJECT_HEADERS} ${PUBLIC_HEADERS})
else()
	add_library(${MODULE_NAME} SHARED ${PROJECT_SOURCES} ${PROJECT_HEADERS} ${PUBLIC_HEADERS})
endif()

add_library(${MODULE_ALIAS} ALIAS ${MODULE_NAME})

set_target_properties(${MODULE_NAME} PROPERTIES
	PUBLIC_HEADER ${PUBLIC_HEADERS}
	)

target_link_libraries(${MODULE_NAME}
	PRIVATE
		mathlib
)

target_include_directories(${MODULE_NAME}
	PUBLIC		
		$<BUILD_INTERFACE:${CMAKE_CURRENT_LIST_DIR}/include>
        $<INSTALL_INTERFACE:include>
)

include(CMakePackageConfigHelpers)
include(GNUInstallDirs)

#install(
#	DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}/include
#	DESTINATION ${CMAKE_INSTALL_INCLUDEDIR}
#)

install(
	TARGETS ${MODULE_NAME}
	EXPORT ${MODULE_EXPORT}
	LIBRARY DESTINATION ${CMAKE_INSTALL_LIBDIR}
	ARCHIVE DESTINATION ${CMAKE_INSTALL_LIBDIR}
	RUNTIME DESTINATION ${CMAKE_INSTALL_BINDIR}
	PUBLIC_HEADER DESTINATION ${CMAKE_INSTALL_INCLUDEDIR}
	INCLUDES DESTINATION ${CMAKE_INSTALL_INCLUDEDIR}
	)

export(
	EXPORT ${MODULE_EXPORT}
	NAMESPACE ${MODULE_NAMESPACE}
	FILE ${MODULE_NAME}-targets.cmake
)

install(
	EXPORT ${MODULE_EXPORT}
	NAMESPACE ${MODULE_NAMESPACE}
	FILE ${MODULE_NAME}-targets.cmake
	DESTINATION ${CMAKE_INSTALL_LIBDIR}/cmake/${MODULE_NAME}
)

install(
	FILES
		${CMAKE_CURRENT_LIST_DIR}/cmake/${MODULE_NAME}-config.cmake
	DESTINATION ${CMAKE_INSTALL_LIBDIR}/cmake/${MODULE_NAME}
)